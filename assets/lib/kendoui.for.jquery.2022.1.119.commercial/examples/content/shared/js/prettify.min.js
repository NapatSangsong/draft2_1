!function(){var e=null;window.PR_SHOULD_USE_CONTINUATION=!0,function(){function t(e){function t(e){var t,n=e.charCodeAt(0);return 92!==n?n:(t=e.charAt(1),(n=d[t])?n:"0"<=t&&t<="7"?parseInt(e.substring(1),8):"u"===t||"x"===t?parseInt(e.substring(2),16):e.charCodeAt(1))}function n(e){return e<32?(e<16?"\\x0":"\\x")+e.toString(16):(e=String.fromCharCode(e),"\\"===e||"-"===e||"]"===e||"^"===e?"\\"+e:e)}function r(e){var r,s,a,i,o,l=e.substring(1,e.length-1).match(/\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\[0-3][0-7]{0,2}|\\[0-7]{1,2}|\\[\S\s]|[^\\]/g);for(e=[],r="^"===l[0],s=["["],r&&s.push("^"),r=r?1:0,a=l.length;r<a;++r)i=l[r],/\\[bdsw]/i.test(i)?s.push(i):(i=t(i),r+2<a&&"-"===l[r+1]?(o=t(l[r+2]),r+=2):o=i,e.push([i,o]),o<65||i>122||(o<65||i>90||e.push([32|Math.max(65,i),32|Math.min(o,90)]),o<97||i>122||e.push([Math.max(97,i)&-33,Math.min(o,122)&-33])));for(e.sort(function(e,t){return e[0]-t[0]||t[1]-e[1]}),l=[],a=[],r=0;r<e.length;++r)i=e[r],i[0]<=a[1]+1?a[1]=Math.max(a[1],i[1]):l.push(a=i);for(r=0;r<l.length;++r)i=l[r],s.push(n(i[0])),i[1]>i[0]&&(i[1]+1>i[0]&&s.push("-"),s.push(n(i[1])));return s.push("]"),s.join("")}function s(e){var t,s,o,l,c,u;for(t=e.source.match(/\[(?:[^\\\]]|\\[\S\s])*]|\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\\d+|\\[^\dux]|\(\?[!:=]|[()^]|[^()[\\^]+/g),s=t.length,o=[],l=0,c=0;l<s;++l)u=t[l],"("===u?++c:"\\"===u.charAt(0)&&(u=+u.substring(1))&&(u<=c?o[u]=-1:t[l]=n(u));for(l=1;l<o.length;++l)-1===o[l]&&(o[l]=++a);for(c=l=0;l<s;++l)u=t[l],"("===u?(++c,o[c]||(t[l]="(?:")):"\\"===u.charAt(0)&&(u=+u.substring(1))&&u<=c&&(t[l]="\\"+o[u]);for(l=0;l<s;++l)"^"===t[l]&&"^"!==t[l+1]&&(t[l]="");if(e.ignoreCase&&i)for(l=0;l<s;++l)u=t[l],e=u.charAt(0),u.length>=2&&"["===e?t[l]=r(u):"\\"!==e&&(t[l]=u.replace(/[A-Za-z]/g,function(e){return e=e.charCodeAt(0),"["+String.fromCharCode(e&-33,32|e)+"]"}));return t.join("")}var a,i,o,l,c,u,d,p;for(a=0,i=!1,o=!1,l=0,c=e.length;l<c;++l)if(u=e[l],u.ignoreCase)o=!0;else if(/[a-z]/i.test(u.source.replace(/\\u[\da-f]{4}|\\x[\da-f]{2}|\\[^UXux]/gi,""))){i=!0,o=!1;break}for(d={b:8,t:9,n:10,v:11,f:12,r:13},p=[],l=0,c=e.length;l<c;++l){if(u=e[l],u.global||u.multiline)throw Error(""+u);p.push("(?:"+s(u)+")")}return RegExp(p.join("|"),o?"gi":"g")}function n(e,t){function n(e){var l=e.nodeType;if(1==l){if(!r.test(e.className)){for(l=e.firstChild;l;l=l.nextSibling)n(l);l=e.nodeName.toLowerCase(),"br"!==l&&"li"!==l||(s[o]="\n",i[o<<1]=a++,i[o++<<1|1]=e)}}else 3!=l&&4!=l||(l=e.nodeValue,l.length&&(l=t?l.replace(/\r\n?/g,"\n"):l.replace(/[\t\n\r ]+/g," "),s[o]=l,i[o<<1]=a,a+=l.length,i[o++<<1|1]=e))}var r=/(?:^|\s)nocode(?:\s|$)/,s=[],a=0,i=[],o=0;return n(e),{a:s.join("").replace(/\n$/,""),d:i}}function r(e,t,n,r){t&&(e={a:t,e:e},n(e),r.push.apply(r,e.g))}function s(e){var t,n,r;for(t=void 0,n=e.firstChild;n;n=n.nextSibling)r=n.nodeType,t=1===r?t?e:n:3===r&&h.test(n.nodeValue)?e:t;return t===e?void 0:t}function a(n,s){function a(e){var t,n,u,d,p,f,g,h,m,y,b,x,w,S;for(t=e.e,n=[t,"pln"],u=0,d=e.a.match(i)||[],p={},f=0,g=d.length;f<g;++f){if(h=d[f],m=p[h],y=void 0,"string"==typeof m)b=!1;else{if(x=l[h.charAt(0)])y=h.match(x[1]),m=x[0];else{for(b=0;b<o;++b)if(x=s[b],y=h.match(x[1])){m=x[0];break}y||(m="pln")}!(b=m.length>=5&&"lang-"===m.substring(0,5))||y&&"string"==typeof y[1]||(b=!1,m="src"),b||(p[h]=m)}x=u,u+=h.length,b?(b=y[1],w=h.indexOf(b),S=w+b.length,y[2]&&(S=h.length-y[2].length,w=S-b.length),m=m.substring(5),r(t+x,h.substring(0,w),a,n),r(t+x+w,b,c(m,b),n),r(t+x+S,h.substring(S),a,n)):n.push(t+x,m)}e.g=n}var i,o,l={};return function(){var r,a,o,c,u,d,p,f;for(r=n.concat(s),a=[],o={},c=0,u=r.length;c<u;++c){if(d=r[c],p=d[3])for(f=p.length;--f>=0;)l[p.charAt(f)]=d;d=d[1],p=""+d,o.hasOwnProperty(p)||(a.push(d),o[p]=e)}a.push(/[\S\s]/),i=t(a)}(),o=s.length,a}function i(t){var n,r,s=[],i=[];return s.push(t.tripleQuotedStrings?["str",/^(?:'''(?:[^'\\]|\\[\S\s]|''?(?=[^']))*(?:'''|$)|"""(?:[^"\\]|\\[\S\s]|""?(?=[^"]))*(?:"""|$)|'(?:[^'\\]|\\[\S\s])*(?:'|$)|"(?:[^"\\]|\\[\S\s])*(?:"|$))/,e,"'\""]:t.multiLineStrings?["str",/^(?:'(?:[^'\\]|\\[\S\s])*(?:'|$)|"(?:[^"\\]|\\[\S\s])*(?:"|$)|`(?:[^\\`]|\\[\S\s])*(?:`|$))/,e,"'\"`"]:["str",/^(?:'(?:[^\n\r'\\]|\\.)*(?:'|$)|"(?:[^\n\r"\\]|\\.)*(?:"|$))/,e,"\"'"]),t.verbatimStrings&&i.push(["str",/^@"(?:[^"]|"")*(?:"|$)/,e]),n=t.hashComments,n&&(t.cStyleComments?(s.push(n>1?["com",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,e,"#"]:["com",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\b|[^\n\r]*)/,e,"#"]),i.push(["str",/^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h(?:h|pp|\+\+)?|[a-z]\w*)>/,e])):s.push(["com",/^#[^\n\r]*/,e,"#"])),t.cStyleComments&&(i.push(["com",/^\/\/[^\n\r]*/,e]),i.push(["com",/^\/\*[\S\s]*?(?:\*\/|$)/,e])),(n=t.regexLiterals)&&(r=(n=n>1?"":"\n\r")?".":"[\\S\\s]",i.push(["lang-regex",RegExp("^(?:^^\\.?|[+-]|[!=]=?=?|\\#|%=?|&&?=?|\\(|\\*=?|[+\\-]=|->|\\/=?|::?|<<?=?|>>?>?=?|,|;|\\?|@|\\[|~|{|\\^\\^?=?|\\|\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\s*("+("/(?=[^/*"+n+"])(?:[^/\\x5B\\x5C"+n+"]|\\x5C"+r+"|\\x5B(?:[^\\x5C\\x5D"+n+"]|\\x5C"+r+")*(?:\\x5D|$))+/")+")")])),(n=t.types)&&i.push(["typ",n]),n=(""+t.keywords).replace(/^ | $/g,""),n.length&&i.push(["kwd",RegExp("^(?:"+n.replace(/[\s,]+/g,"|")+")\\b"),e]),s.push(["pln",/^\s+/,e," \r\n\t "]),n="^.[^\\s\\w.$@'\"`/\\\\]*",t.regexLiterals&&(n+="(?!s*/)"),i.push(["lit",/^@[$_a-z][\w$@]*/i,e],["typ",/^(?:[@_]?[A-Z]+[a-z][\w$@]*|\w+_t\b)/,e],["pln",/^[$_a-z][\w$@]*/i,e],["lit",/^(?:0x[\da-f]+|(?:\d(?:_\d+)*\d*(?:\.\d*)?|\.\d\+)(?:e[+-]?\d+)?)[a-z]*/i,e,"0123456789"],["pln",/^\\[\S\s]?/,e],["pun",RegExp(n),e]),a(s,i)}function o(e,t,n){function r(e){var t,l,c=e.nodeType;if(1!=c||a.test(e.className))3!=c&&4!=c||!n||(t=e.nodeValue,l=t.match(i),l&&(c=t.substring(0,l.index),e.nodeValue=c,(t=t.substring(l.index+l[0].length))&&e.parentNode.insertBefore(o.createTextNode(t),e.nextSibling),s(e),c||e.parentNode.removeChild(e)));else if("br"===e.nodeName)s(e),e.parentNode&&e.parentNode.removeChild(e);else for(e=e.firstChild;e;e=e.nextSibling)r(e)}function s(e){function t(e,n){var r,s,a=n?e.cloneNode(!1):e,i=e.parentNode;if(i)for(i=t(i,1),r=e.nextSibling,i.appendChild(a),s=r;s;s=r)r=s.nextSibling,i.appendChild(s);return a}for(;!e.nextSibling;)if(e=e.parentNode,!e)return;for(var n,e=t(e.nextSibling,0);(n=e.parentNode)&&1===n.nodeType;)e=n;c.push(e)}var a,i,o,l,c,u,d,p;for(a=/(?:^|\s)nocode(?:\s|$)/,i=/\r\n?|\n/,o=e.ownerDocument,l=o.createElement("li");e.firstChild;)l.appendChild(e.firstChild);for(c=[l],u=0;u<c.length;++u)r(c[u]);for(t===(0|t)&&c[0].setAttribute("value",t),d=o.createElement("ol"),d.className="linenums",t=Math.max(0,t-1|0)||0,u=0,p=c.length;u<p;++u)l=c[u],l.className="L"+(u+t)%10,l.firstChild||l.appendChild(o.createTextNode(" ")),d.appendChild(l);e.appendChild(d)}function l(e,t){var n,r;for(n=t.length;--n>=0;)r=t[n],y.hasOwnProperty(r)?x.console&&console.warn("cannot override language handler %s",r):y[r]=e}function c(e,t){return e&&y.hasOwnProperty(e)||(e=/^\s*</.test(t)?"default-markup":"default-code"),y[e]}function u(e){var t,r,s,a,i,o,l,u,d,p,f,g,h,m,y,b,w,S,v,C,N,_,k,T,E=e.h;try{for(t=n(e.c,e.i),r=t.a,e.a=r,e.d=t.d,e.e=0,c(E,r)(e),s=/\bMSIE\s(\d+)/.exec(navigator.userAgent),s=s&&+s[1]<=8,E=/\n/g,a=e.a,i=a.length,t=0,o=e.d,l=o.length,r=0,u=e.g,d=u.length,p=0,u[d]=i,g=f=0;g<d;)u[g]!==u[g+2]?(u[f++]=u[g++],u[f++]=u[g++]):g+=2;for(d=f,g=f=0;g<d;){for(h=u[g],m=u[g+1],y=g+2;y+2<=d&&u[y+1]===m;)y+=2;u[f++]=h,u[f++]=m,g=y}u.length=f,b=e.c,b&&(w=b.style.display,b.style.display="none");try{for(;r<l;)S=o[r+2]||i,v=u[p+2]||i,y=Math.min(S,v),C=o[r+1],1!==C.nodeType&&(N=a.substring(t,y))&&(s&&(N=N.replace(E,"\r")),C.nodeValue=N,_=C.ownerDocument,k=_.createElement("span"),k.className=u[p+1],T=C.parentNode,T.replaceChild(k,C),k.appendChild(C),t<S&&(o[r+1]=C=_.createTextNode(a.substring(y,S)),T.insertBefore(C,k.nextSibling))),t=y,t>=S&&(r+=2),t>=v&&(p+=2)}finally{b&&(b.style.display=w)}}catch($){x.console&&console.log($&&$.stack||$)}}var d,p,f,g,h,m,y,b,x=window,w=["break,continue,do,else,for,if,return,while"],S=[[w,"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile"],"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof"],v=[S,"alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where"],C=[S,"abstract,assert,boolean,byte,extends,final,finally,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient"],N=[C,"as,base,by,checked,decimal,delegate,descending,dynamic,event,fixed,foreach,from,group,implicit,in,internal,into,is,let,lock,object,out,override,orderby,params,partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,var,virtual,where"];S=[S,"debugger,eval,export,function,get,null,set,undefined,var,with,Infinity,NaN"],d=[w,"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None"],p=[w,"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END"],f=[w,"as,assert,const,copy,drop,enum,extern,fail,false,fn,impl,let,log,loop,match,mod,move,mut,priv,pub,pure,ref,self,static,struct,true,trait,type,unsafe,use"],w=[w,"case,done,elif,esac,eval,fi,function,in,local,set,then,until"],g=/^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)\b/,h=/\S/,m=i({keywords:[v,N,S,"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END",d,p,w],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),y={},l(m,["default-code"]),l(a([],[["pln",/^[^<?]+/],["dec",/^<!\w[^>]*(?:>|$)/],["com",/^<\!--[\S\s]*?(?:--\>|$)/],["lang-",/^<\?([\S\s]+?)(?:\?>|$)/],["lang-",/^<%([\S\s]+?)(?:%>|$)/],["pun",/^(?:<[%?]|[%?]>)/],["lang-",/^<xmp\b[^>]*>([\S\s]+?)<\/xmp\b[^>]*>/i],["lang-js",/^<script\b[^>]*>([\S\s]*?)(<\/script\b[^>]*>)/i],["lang-css",/^<style\b[^>]*>([\S\s]*?)(<\/style\b[^>]*>)/i],["lang-in.tag",/^(<\/?[a-z][^<>]*>)/i]]),["default-markup","htm","html","mxml","xhtml","xml","xsl"]),l(a([["pln",/^\s+/,e," \t\r\n"],["atv",/^(?:"[^"]*"?|'[^']*'?)/,e,"\"'"]],[["tag",/^^<\/?[a-z](?:[\w-.:]*\w)?|\/?>$/i],["atn",/^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i],["lang-uq.val",/^=\s*([^\s"'>]*(?:[^\s"'\/>]|\/(?=\s)))/],["pun",/^[\/<->]+/],["lang-js",/^on\w+\s*=\s*"([^"]+)"/i],["lang-js",/^on\w+\s*=\s*'([^']+)'/i],["lang-js",/^on\w+\s*=\s*([^\s"'>]+)/i],["lang-css",/^style\s*=\s*"([^"]+)"/i],["lang-css",/^style\s*=\s*'([^']+)'/i],["lang-css",/^style\s*=\s*([^\s"'>]+)/i]]),["in.tag"]),l(a([],[["atv",/^[\S\s]+/]]),["uq.val"]),l(i({keywords:v,hashComments:!0,cStyleComments:!0,types:g}),["c","cc","cpp","cxx","cyc","m"]),l(i({keywords:"null,true,false"}),["json"]),l(i({keywords:N,hashComments:!0,cStyleComments:!0,verbatimStrings:!0,types:g}),["cs"]),l(i({keywords:C,cStyleComments:!0}),["java"]),l(i({keywords:w,hashComments:!0,multiLineStrings:!0}),["bash","bsh","csh","sh"]),l(i({keywords:d,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),["cv","py","python"]),l(i({keywords:"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END",hashComments:!0,multiLineStrings:!0,regexLiterals:2}),["perl","pl","pm"]),l(i({keywords:p,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),["rb","ruby"]),l(i({keywords:S,cStyleComments:!0,regexLiterals:!0}),["javascript","js"]),l(i({keywords:"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,regexLiterals:!0}),["coffee"]),l(i({keywords:f,cStyleComments:!0,multilineStrings:!0}),["rc","rs","rust"]),l(a([],[["str",/^[\S\s]+/]]),["regex"]),b=x.PR={createSimpleLexer:a,registerLangHandler:l,sourceDecorator:i,PR_ATTRIB_NAME:"atn",PR_ATTRIB_VALUE:"atv",PR_COMMENT:"com",PR_DECLARATION:"dec",PR_KEYWORD:"kwd",PR_LITERAL:"lit",PR_NOCODE:"nocode",PR_PLAIN:"pln",PR_PUNCTUATION:"pun",PR_SOURCE:"src",PR_STRING:"str",PR_TAG:"tag",PR_TYPE:"typ",prettyPrintOne:x.prettyPrintOne=function(e,t,n){var r=document.createElement("div");return r.innerHTML="<pre>"+e+"</pre>",r=r.firstChild,n&&o(r,n,!0),u({h:t,j:n,c:r,i:1}),r.innerHTML},prettyPrint:x.prettyPrint=function(t,n){function r(){var n,a,c,d,p,N,_,k;for(n=x.PR_SHOULD_USE_CONTINUATION?f.now()+250:1/0;g<l.length&&f.now()<n;g++){for(a=l[g],c=C,d=a;(d=d.previousSibling)&&(p=d.nodeType,N=(7===p||8===p)&&d.nodeValue,N?/^\??prettify\b/.test(N):3===p&&!/\S/.test(d.nodeValue));)if(N){c={},N.replace(/\b(\w+)=([\w%+\-.:]+)/g,function(e,t,n){c[t]=n});break}if(d=a.className,(c!==C||y.test(d))&&!b.test(d)){for(p=!1,N=a.parentNode;N;N=N.parentNode)if(v.test(N.tagName)&&N.className&&y.test(N.className)){p=!0;break}p||(a.className+=" prettyprinted",p=c.lang,p||(p=d.match(m),!p&&(_=s(a))&&S.test(_.tagName)&&(p=_.className.match(m)),p&&(p=p[1])),w.test(a.tagName)?N=1:(N=a.currentStyle,k=i.defaultView,N=(N=N?N.whiteSpace:k&&k.getComputedStyle?k.getComputedStyle(a,e).getPropertyValue("white-space"):0)&&"pre"===N.substring(0,3)),k=c.linenums,(k="true"===k||+k)||(k=!!(k=d.match(/\blinenums\b(?::(\d+))?/))&&(!k[1]||!k[1].length||+k[1])),k&&o(a,k,N),h={h:p,c:a,j:k,i:N},u(h))}}g<l.length?setTimeout(r,250):"function"==typeof t&&t()}var a,i,l,c,d,p,f,g,h,m,y,b,w,S,v,C;for(a=n||document.body,i=a.ownerDocument||document,a=[a.getElementsByTagName("pre"),a.getElementsByTagName("code"),a.getElementsByTagName("xmp")],l=[],c=0;c<a.length;++c)for(d=0,p=a[c].length;d<p;++d)l.push(a[c][d]);a=e,f=Date,f.now||(f={now:function(){return+new Date}}),g=0,m=/\blang(?:uage)?-([\w.]+)(?!\S)/,y=/\bprettyprint\b/,b=/\bprettyprinted\b/,w=/pre|xmp/i,S=/^code$/i,v=/^(?:pre|code|xmp)$/i,C={},r()}},"function"==typeof define&&define.amd&&define("google-code-prettify.min",[],function(){return b})}()}();